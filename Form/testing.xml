<?xml version="1.0" encoding="utf-8"?>
<testing>
    <cycles>
        <question id = "1">
            <quest>
                Сколько раз выполнится цикл?
                int i = 1;
                while (i &lt; 5) 
                {
                    i++;
                    printf(“%d”,i);
                }
                    Варианты ответа:
                1) Ни разу;
                2) 4 раза;
                3) Бесконечное кол-во раз;
                4) 5 раз;
            </quest>
            <true>2</true>
        </question>
        <question id = "2">
		         <quest>
                 2. Что будет выведено на экран в результате выполнения цикла?
		             int i = 1;
		             while (i &lt; 5) 
		              {
			                i++;
			                printf(“%d”,i);
		              }
                  1) 1234
		              2) 4
		              3) 5
		              4) 12345
		          </quest>
		          <true>1</true>
		    </question>
        <question id = "3">
		          <quest>
		              3. Сколько раз выполнится цикл:
		              int i = 1;
		              while (i &lt; 0) 
                  {
		              i++;
		              printf(“%d”,i);
		              }
		              1) бесконечное кол-во раз
		              2) 1 раз(void)
		              3) ни разу
	              	4) 2 раза
              </quest>
		          <true>3</true>
		     </question>
         <question id = "4">
		           <quest>
                   4. Какой служебный знак ставится после оператора case?
		               1) :
		               2) - 
                   3) ;
		               4) .
               </quest>
		           <true>1</true>
		      </question>
          <question id = "5">
		            <quest>
		                5. Что выведется в результате завершения цикла?
		                int i = 1;
		                while (i &lt; 0) 
                    {
		                i++;
		                printf(“%d”,i);
		                }
		                1) 0;
                    2) -1 
		                3) 1 
		                4) ничего
                </quest>
		            <true>4</true>
		        </question>
            <question id = "6">
		              <quest>
		                  6. Цикл с предусловием?
		                  1) do while
		                  2) while
		                  3) for
		                  4) switch
                  </quest>
		              <true>2</true>
		         </question>
             <question id = "7">
                   <quest>
		                   7. Цикл с постусловием?
		                   1) do while
		                   2) while
		                   3) for
		                   4) switch
                 </quest>
		             <true>1</true>
		        </question>
            <question id = "8">
                <quest>
                    8. Какой из ниже перечисленных операторов, не является циклом в С++?
                    1) do while
                    2) for
                    3) repeat until
                    4) while
                </quest>
		            <true>3</true>
		      </question>
		      <question id = "9">
                <quest>
                    9. До каких пор будут выполняться операторы в теле цикла while (x &lt; 100)?
                    1) Пока х строго меньше ста
                    2) Пока х равен стам
                    3) Пока х больше ста
                    4) Пока х меньше или равен стам
                </quest>
		            <true>1</true>
		       </question>
		       <question id = "10">
                <quest>
                    10. Тело любого цикла выполняется до тех пор, пока его условие ...
                    1) истинно
                    2) ложно
                    3) у цикла нет условия
                    4) не истинно
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "11">
		            <quest>
		                11. Сколько раз выполнится цикл?
		                int i = 1;
		                while (true) 
                    {
		                i++;
		                printf(“%d”,i);
		                }
		                1) бесконечное кол-во раз
		                2) 1 раз
		                3) ни разу
		                4) 100 раз
                  </quest>
		              <true>1</true>
		      </question>
		      <question id = "12">
		            <quest>
		                12. Цикл For называется циклом …
		                1) с заданным количеством шагов
		                2) с предусловием
                    3) с постусловием
                    4) не является циклом                  
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "13">
		            <quest>
		                13. Что выведется в результате завершения цикла:
		                int i = 1;
		                while (true) 
                    {
		                i++;
		                printf(“%d”,i);
		                }
		                1) ничего
                    2) 123456
                    3) 12345678...
                    4) true
                </quest>
		            <true>3</true>
		      </question>
		      <question id = "14">
		            <quest>
	                	14. Может ли счетчик цикла For изменяться с шагом -1?
		                1) да
		                2) нет
		                3) зависит от условия задачи
		                4) не знаю
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "15">
		            <quest>
		                15. Цикл - это
                    1) многократно повторяющийся фрагмент программы
                    2) однократно повторяющийся фрагмент программы
                    3) не 1), не 2)
                    4) нет четкого определения этого термина       
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "16">
		            <quest>
		                16. Что выведет данная программа после завершения цикла?
		                int i=1;
		                do
                    {
		                printf(“%d  “,i);
		                i++;
		                } while(i &lt; 5);
                    1) 1
                    2) 5
                    3) 15
                    4) 1234
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "17">
		            <quest>
		                17.Что выведет данная программа после завершения цикла?
		                int i=0;
		                do 
                    {
		                i++;
		                printf("%d  ",i);
		                } while(i &lt; 5);
                    1) 1234
                    2) 0
                    3) 5
                    4) 01234
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "18">
		            <quest>
		                18. Может ли счетчик цикла While изменяться с шагом 0,3?
                    1) да 
                    2) нет
                    3) зависит от условия задачи
                    4) не знаю
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "19">
		            <quest>
	                	19. Что выведет данная программа после завершения цикла?
	                	int i=5;
		                do 
                    {
		                i++;
		                printf("%d  ",i);
	                	} while(i &lt; 5);
		                1) 5
                    2) ничего
                    3) 6
                    4) 56
                </quest>
		            <true>3</true>
		      </question>
		      <question id = "20">
		            <quest>
		                20. Выберите правильную форму общей записи цикла for:
		                1)
			                for (инициализация параметра; проверка условия окончания; коррекция параметра)
			                {
  				                блок операций;
			                }
		                2)
			                for (проверка условия окончания; инициализация параметра; коррекция параметра)
		                	{
  				                блок операций;
			                }
		                3)
			                {
  				                блок операций;
			                }
		                	for (проверка условия окончания; инициализация параметра; коррекция параметра)
		                4)
			                {
 			                  	блок операций;
			                }
			                for (инициализация параметра; проверка условия окончания; коррекция параметра)
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "21">
		            <quest>
                    21. Сторожевое условие цикла это:	
		                1) Общее название для условий продолжения и завершения циклов
                    2) Условие продолжения цикла
                    3) Условие завершения цикла
                    4) Нет верного ответа из предложенных
                </quest>
                <true>3</true>
		      </question>
		      <question id = "22">
		            <quest>
		                22. Сколько раз будет выполнено тело следуюшего оператора цикла? for (int x=0, step = 1; x &lt; 100; x += step, step++) { ... }	
		                1) 14
                    2) 100
                    3) 50
                    4) 0
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "23">
		            <quest>
		                23. Чему будет равна переменная i после завершения цикла: 
		                int i;
		                for (i=0; i &lt; = 18; i++) {...}	
		                1) ничему, поскольку переменная i объявлена в блоке цикла for, и за его пределами не видна
                    2) 19, поскольку последнее допустимое значение переменной i равно 18, а первое недопустимое при шаге в 1 равно именно 19
		                3) оба ответа верны
                    4) ни одного верного ответа
                </quest>
		            <true>2</true>
		      </question>
		      <question id = "24">
		            <quest>
		                24. Сколько раз может исполнится тело цикла с постусловием do-while?
		                1) 1 или более раз
                    2) 0 или более раз
                    3) 1 раз
                    4) нет верного ответа
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "25">
		            <quest>
		                25. Если условие продолжения цикла не определено на момент начала цикла, какой тип циклов предпочтительно использовать?	
		                1) Цикл с параметром for
                    2) Цикл с предусловием while
                    3) Цикл с постусловием do-while
                    4) Нет верного ответа
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "26">
		            <quest>
		                26. Сколько раз будет выполнено тело следуюшего оператора цикла?
		                for (int i=0; i &lt; 15; i+=2)
		                {...}	
	                	1) 16 раз
                    2) 15 раз
                    3) 1 раз
                    4) бесконечное кол-во раз
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "27">
		            <quest>
		                27. Чему равен шаг цикла в следующем примере:
		                for (int i=14; i &gt; =0; i--) 
                    {...}	
                    1) -1
                    2) 1
                    3) 0
                    4) 2
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "28">
		            <quest>
		                28. Каково последнее значение переменной цикла x, при котором цикл будет продолжаться?
	                	double x = 0; while (x &lt; 5.7)
		                { …
	                	x += 0.5;
		                }
                    1) 5
                    2) 7
                    3) 0
                    4) 6
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "29">
		            <quest>
		                29. Чему равен шаг цикла в следующем примере:
		                for (int i=0; i &lt; 15; i++) 
                    {...}	
                    1) 15
                    2) 0
                    3) 1
                    4) 16
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "30">
		            <quest>
		                30. Совместно с каким оператором обычно используются операторы break и continue в теле цикла?
                    1) Совместно с оператором while
                    2) Совместно с оператором if-else
                    3) Совместно с оператором switch-case
                    4) Ни одного верного ответа
		            </quest>
		            <true>2</true>
		      </question>
    </cycles>
    <arrays>
		      <question id = "31">
		            <quest>
		                31. Что называется массивом?
                    1) Под массивом понимается совокупность конечного числа данных различных типов
                    2) Под массивом понимается совокупность конечного числа данных одного типа
                    3) Под массивом понимается совокупность бесконечного числа данных различных типов
                    4) Под массивом понимается совокупность конечного числа данных одного типа
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "32">
		            <quest>
		                32. Что выведет данная программа?
		                int main()
		                {
		                int a=1, b=2;
		                int *p1=&amp;a;
		                int *p2=p1;
		                p1=&amp;b;
		                print ("%d %d",(*p1),(*p2));
		                return 0;
		                }
                    1) 12
                    2) Адреса переменных a и b
                    3) 22
                    4) 21
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "33">
		            <quest>
		                33. Элемент массива (значение элемента массива)-
                    1) значение, хранящееся в определенной ячейке памяти, расположенной в пределах массива, а также адрес этой ячейки памяти
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) количество байт, занимаемых одним элементом массива
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "34">
		            <quest>
		                34. Адрес элемента-
                    1) значение, хранящееся в определенной ячейке памяти, расположенной в пределах массива, а также адрес этой ячейки памяти
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) количество байт, занимаемых одним элементом массива
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "35">
		            <quest>
		                35. Индекс элемента-
                    1) порядковый номер элемента в массиве
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) количество байт, занимаемых одним элементом массива
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "36">
		            <quest>
		                36. Адрес массива-
                    1) адрес начального элемента массива
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) количество байт, занимаемых одним элементом массива
		            </quest>
		            <true>1</true>
	      	</question>
	      	<question id = "37">
		            <quest>
		                37. Имя массива-
                    1) адрес начального элемента массива
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) количество байт, занимаемых одним элементом массива
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "38">
		            <quest>
		                38. Размер массива-
                    1) адрес начального элемента массива
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) кол-во элементов массива
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "39">
		            <quest>
		                39. Размер элемента-
                    1) количество байт, занимаемых одним элементом массива
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) кол-во элементов массива
		            </quest>
		            <true>1</true>
	      	</question>
		      <question id = "40">
		            <quest>
		                40. Для объявления массива в языке Си используется следующий синтаксис:
                    1) тип имя[размерность]={инициализация};
                    2) тип имя[инициализация]={размерность};
                    3) тип имя{размерность}={инициализация};
                    4) ни одного верного варианта
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "41">
		            <quest>
		                41. Из скольки элементов состоит массив int a[10] = {0};?
                    1) 10
                    2) 1
                    3) 0
                    4) 11
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "42">
		            <quest>
	                	42. Из скольких элементов состоит массив:
	                	int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
                    1) 1
                    2) 9
                    3) 5
                    4) не определено
	            	</quest>
		            <true>2</true>
		      </question>
		      <question id = "43">
		            <quest>
		                43. В каких скобках указывается индекс элемента массива?
                    1) { }
                    2) [ ]
                    3) ( )
                    4) ни в каких
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "44">
		            <quest>
		                44. Как заполнить массив случайными числами ?
                    1)
			                for ( int i = 0; i &lt; 10; i ++)
			                Arr [i] = rand ()%100;
		                2)
			                for ( int i = 0; i &lt; 10; i ++)
			                Arr [i] = rand ()/100;
                    3)
			                for ( int i = 0; i &lt; 10; i ++)
			                Arr [i] = rand ()*100;
		                4)
			                for ( int i = 0; i &lt; 10; i ++)
			                Arr [i] = rand ()+100;
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "45">
		            <quest>
		                45. Структура- 
                    1) это совокупность переменных, объединенных одним именем, предоставляющая общепринятый способ совместного хранения информации
                    2) адрес начальной ячейки памяти, в которой расположен этот элемент
                    3) идентификатор, используемый для обращения к элементам массива
                    4) кол-во элементов массива
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "46">
		            <quest>
		                46. Многомерные массивы-
                    1) это массивы, у которых есть более одного индекса
                    2) это массивы, у которых есть более одного индекса или 1 индекс
                    3) это массивы, у которых нет индекса
                    4) ни одного верного ответа
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "47">
		            <quest>
		                47. Двумерный массив объявляется следующим образом:
                    1) тип имя_массива[размер второго измерения][размер первого измерения];
                    2) тип имя_массива{размер второго измерения}[размер первого измерения];
                    3) тип имя_массива[размер первого измерения][размер второго измерения];
                    4) тип имя_массива[размер второго измерения]{размер второго измерения};
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "48">
		            <quest>
		                48. Выберете неверное утверждение:
                    1) все элементы массива имеют один и тот же тип
                    2) массив имеет одно имя для всех элементов
                    3) массив бывает только одномерный
                    4) доступ к конкретному элементу массива осуществляется по индексу (индексам)
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "49">
		            <quest>
		                49. В каком из вариантов объявлен двумерный массив?
                    1) int anarray [20] [20]
                    2) int array [20, 20]
                    3) array anarray [20] [20]
                    4) char array [20]
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "50">
		            <quest>
		                50.В одном из следующих строк, записанных на языке С ++, выполняется обращение к седьмого элемента массива, размер массива равен 10
                    1) mas (7)
                    2) mas [6]
                    3) mas 8
                    4) mas [7]
	            	</quest>
		            <true>2</true>
		      </question>
		      <question id = "51">
		            <quest>
		                51. Значения элементов двухмерного массива A[1..100,1..100] задаются с помощью следующего фрагмента программы. Чему равна сумма элементов массива после выполнения этого фрагмента программы?
		                for (i=1;i &lt; =100;i++) 
                    {
    			                for (k=1;k &lt; =100;k++) 
                          {
        					                if (i &gt; k) 
                                  {
             							                A[i,k] = i;
         					   	            }
       					                	else A[i,k] = -k;
    				     	        }
			     	         }
                     1) 40
                     2) -5050
                     3) 100
                     4) 200
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "52">
		            <quest>
	                	52. Значения элементов двухмерного массива A[1..100,1..100] задаются с помощью следующего фрагмента программы. Чему равна сумма элементов массива после выполнения этого фрагмента программы?
		                for (i = 1; i &lt; = 100; i++) 
                    {
    		                	for (k = 1; k &lt; = 100; k++) 
                          {
       							                if (i == k)  A[i][k] = 1;
        						                else A[i][k] = -1;
    					   	        } 
				    	       }
                     1) -9800
                     2) 100
                     3) -100
                     4) 0
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "53">
		            <quest>
		                53. Дан фрагмент программы, обрабатывающей двухмерный массив A[1..5,1..4]. Чему будет равно значение A[3,1]?
		                k = 4;
		                for (m = 1; m &lt; = 4; m++) 
                    {
    				                	k = k + 1;
    					                for (n = 1; n &lt; = 5; n++) 
                              {
        								                k=m-k;
        								                A[n][m]=n*n+m*m-2*k;
    								          }
			           	  }
                    1) 4
                    2) 5
                    3) 17
                    4) 18
	            	</quest>
		            <true>4</true>
		      </question>
		      <question id = "54">
		            <quest>
		                54. Элементы двухмерного массива A размером 10x10 первоначально были равны 1. Затем значения некоторых из них меняют с помощью следующего фрагмента программы. Сколько элементов массива в результате будут равны 0?
		                for (n = 1; n &lt; = 4; n++)
                    {
    		                	for (k = 1; k &lt; = n+1; k++) 
                          {
       						                	A[n][k]= A[n][k]-1;
        					 	                A[n][k+1]= A[n][k]-1;
    					   	        } 
				 	          }
                    1) 4
                    2) 1
                    3) 2
                    4) 3
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "55">
		            <quest>
		                55. В программе описан двухмерный целочисленный массив A [1..6,1..6]. Ниже представлен фрагмент этой программы, в котором изменяются значения элементов массива. До выполнения данного фрагмента программы значение A[4,3] было равно 10, а значение A[3,4] было равно 15. Чему будет равно значение A[4,3] после выполнения этого фрагмента программы?
		                for (n = 1; n &lt; = 6; n++) 
                    {
    			                for (m = 1; m &lt; = 6; m++) 
                          {
       						 	                A[n][m]= A[m][n]+2*n-m;
    					 	          } 
				 	          }
                    1) 16
                    2) -1
                    3) 1
                    4) 17
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "56">
		            <quest>
		                56. Значения двумерного массива задаются с помощью вложенного оператора цикла в представленном фрагменте программы. Чему будет равно значение B[2,4]?
		                for (n = 1; n &lt; = 5; n++) 
                    {
    		                	for (k = 1; k &lt; = 5; k++) 
                          {
       							                B[n][k]= n + k;
    						          } 
					          }
                    1) 2
                    2) 6
                    3) 4
                    4) 5
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "57">
		            <quest>
	                	57. Значения элементов двумерного массива А размером 5x5 задаются с помощью вложенного цикла в представленном фрагменте программы. Сколько элементов массива будут иметь значения больше 10?
	                	for (i = 1; i &lt; = 5; i++) 
                    {
    			                for (j = 1; j &lt; = 5; j++)
                          {
        						                A[i][j]= i*j;
    						          }	 
	                	}
                    1) 8
                    2) 4
                    3) 6
                    4) 7
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "58">
		            <quest>
		                58. Значения элементов двухмерного массива A[1..10,1..10] сначала равны 4. Затем выполняется следующий фрагмент программы. Сколько элементов массива будут равны 9?
		                for (i = 1; i &lt; = 4; i++) 
                    {
    			                for (j = 1; j &lt; = 5; j++) 
                          {
        						                A[i][j]=A[i][j]+4;
        						                A[j][i]=A[j][i]+5;
    						          } 
		                }
                    1) 0
                    2) 2
                    3) 4
                    4) 6
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "59">
		            <quest>
	                	59. Дан фрагмент программы. Сколько элементов массива С будут равны 1?
		                for (n = 1; n &lt; = 5; n++)
                    {
    			                for (m = 1; m &lt; = 5; m++) 
                          {
        			                C[n][m] = (m – n)*(m – n);
    			                } 
		                }
                    1) 8
                    2) 4
                    3) 6
                    4) 2
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "60">
		            <quest>
		                60.Все элементы двумерного массива A размером 10х10 элементов первоначально были равны 0. Затем значения элементов меняются с помощью вложенного оператора цикла в представленном фрагменте программы. Сколько элементов массива в результате будут равны 1?
		                for (n = 1; n &lt; = 4; n++) 
                    {
    			                for (k = n; k &lt; = 4; k++)
                          {
        		                	A[n][k] = A[n][k] + 1;
        		                	A[k][n] = A[k][n] + 1;
    		                	} 
		                }
                    1) 10
                    2) 12
                    3) 4
                    4) 6
		            </quest>
		            <true>2</true>
		      </question>
  </arrays>
  <lines>
		      <question id = "61">
		            <quest>
		                61.Для хранения строк в C++ применяется тип:
                    1) string
                    2) int
                    3) double
                    4) char
		            </quest>
	            	<true>1</true>
		      </question>
	      	<question id = "62">
	            	<quest>
	                	62. С помощью метода … можно узнать размер строки, то есть из скольких символов она состоит.
                    1) size()
                    2) int()
                    3) void()
                    4) empty()
		            </quest>
		            <true>1</true>
	      	</question>
		      <question id = "63">
		            <quest>
		                63. Если строка пустая, то она содержит 0 символов. В этом случае мы можем применить метод … - он возвращает true, если строка пустая.
		                1) size()
                    2) int()
                    3) void()
                    4) empty()
                </quest>
	            	<true>4</true>
		      </question>
	       	<question id = "64">
		            <quest>
	                	64. Для считывания введенной строки с консоли можно использовать объект … :
                    1) std::cin
                    2) std::cout
                    3) 1) и 2) 
                    4) не 1), и не 2)
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "65">
		            <quest>
	                	65. Чтобы считать всю строку, применяется метод … :
                    1) getline()
                    2) int()
                    3) void()
                    4) empty()
                </quest>
		            <true>1</true>
		      </question>
		      <question id = "66">
		            <quest>
		                66. Тип string определен в стандартной библиотеке и при его использовании надо указывать пространство имен ...
                    1) int
                    2) std
                    3) cin
                    4) printf
		            </quest>
		            <true>2</true>
	      	</question>
		      <question id = "67">
		            <quest>
	                	67. Выберите правильную запись:
                    1) using std::string;
                    2) using string::std;
                    3) using std:string;
                    4) using string:std;
		            </quest>
	            	<true>1</true>
		      </question>
		      <question id = "68">
		            <quest>
	                	68. Символ нуль-терминатора:
                    1) /0
                    2) 0\\
                    3) \0
                    4) 0\
	            	</quest>
	            	<true>3</true>
		      </question>
		      <question id = "69">
		            <quest>
		                69. Символьные строки состоят из набора символьных констант заключённых в ...
                    1) двойные кавычки
                    2) круглые скобки
                    3) квадратные скобки
                    4) фигурные скобки
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "70">
		            <quest>
		                70.При объявлении строкового массива необходимо учитывать наличие в конце строки ..., и отводить дополнительный байт под него(неё).
                    1) скобки
                    2) нуль-терминатора
                    3) кавычки
                    4) оператора
	            	</quest>
		            <true>2</true>
		      </question>
		      <question id = "71">
		            <quest>
		                71. С помощью функции … считаются все введённые символы с пробелами до тех пор, пока во вводимом потоке не встретится код клавиши enter.
                    1) cin
                    2) gets()
                    3) cout
                    4) void()
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "72">
		            <quest>
		                72. Функция strlen(имя_строки):
                    1) определяет длину указанной строки, без учёта нуль-символа
                    2) выполняет побайтное копирование символов из строки  s2 в строку s1
                    3) выполняет побайтное копирование n символов из строки  s2 в строку s1. возвращает значения s1
                    4) объединяет строку s2 со строкой s1. Результат сохраняется в s1
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "73">
	            	<quest>
		                73. Функция strcpy(s1,s2):
                    1) определяет длину указанной строки, без учёта нуль-символа
                    2) выполняет побайтное копирование символов из строки s2 в строку s1
                    3) выполняет побайтное копирование n символов из строки  s2 в строку s1. возвращает значения s1
                    4) объединяет строку s2 со строкой s1. Результат сохраняется в s1
	            	</quest>
		            <true>2</true>
		      </question>
		      <question id = "74">
		            <quest>
		                74. Функция strncpy(s1,s2, n):
                    1) определяет длину указанной строки, без учёта нуль-символа
                    2) выполняет побайтное копирование символов из строки  s2 в строку s1
                    3) выполняет побайтное копирование n символов из строки  s2 в строку s1. возвращает значения s1
                    4) объединяет строку s2 со строкой s1. Результат сохраняется в s1
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "75">
		            <quest>
	                	75. Функция strcat(s1,s2):
                    1) определяет длину указанной строки, без учёта нуль-символа
                    2) выполняет побайтное копирование символов из строки  s2 в строку s1
                    3) выполняет побайтное копирование n символов из строки  s2 в строку s1. возвращает значения s1
                    4) объединяет строку s2 со строкой s1. Результат сохраняется в s1
	            	</quest>
		            <true>4</true>
		      </question>
		      <question id = "76">
	            	<quest>
		                76. Функция strncat(s1,s2,n):
                    1) объединяет n символов строки s2 со строкой s1. Результат сохраняется в s1
                    2) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2, &lt; 0  — если s1 &gt; s2 С учётом регистра
		                3) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
		                4) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 Без учёта регистра
		            </quest>
	            	<true>1</true>
		      </question>
	      	<question id = "77">
		            <quest>
		                77. Функция strcmp(s1,s2):
                    1) объединяет n символов строки s2 со строкой s1. Результат сохраняется в s1
                    2) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2, &lt; 0  — если s1 &gt; s2 С учётом регистра
                    3) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
                    4) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2, &lt; 0 — если s1 &gt; s2 Без учёта регистр
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "78">
		            <quest>
		                78. Функция strncmp(s1,s2,n):
                    1) объединяет n символов строки s2 со строкой s1. Результат сохраняется в s1
                    2) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
                    3) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
                    4) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 Без учёта регистра
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "79">
		            <quest>
		                79. Функция stricmp(s1,s2):
                    1) объединяет n символов строки s2 со строкой s1. Результат сохраняется в s1
                    2) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
		                3) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 С учётом регистра
		                4) сравнивает строку s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0  — если s1 &gt; s2 Без учёта регистра
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "80">
		            <quest>
		                80. Функция strnicmp(s1,s2,n):
                    1) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0 — если s1 &gt; s2 Без учёта регистра
                    2) возвращает значение true, если с является буквой или цифрой, и false в других случаях
                    3) возвращает значение true, если с является буквой, и false в других случаях
                    4) возвращает значение true, если с является цифрой, и false в других случаях
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "81">
		            <quest>
		                81. Функция isalnum(c):
                    1) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0 — если s1 &gt; s2 Без учёта регистра
                    2) возвращает значение true, если с является буквой или цифрой, и false в других случаях
                    3) возвращает значение true, если с является буквой, и false в других случаях
                    4) возвращает значение true, если с является цифрой, и false в других случаях
		            </quest>
	            	<true>2</true>
		      </question>
	      	<question id = "82">
	            	<quest>
		                82. Функция isalpha(c):
                    1) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0 — если s1 &gt; s2 Без учёта регистра
                    2) возвращает значение true, если с является буквой или цифрой, и false в других случаях
                    3) возвращает значение true, если с является буквой, и false в других случаях
                    4) возвращает значение true, если с является цифрой, и false в других случаях
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "83">
		            <quest>
		                83. Функция isdigit(c):
                    1) сравнивает n символов строки s1 со строкой s2 и возвращает результат типа int: 0 –если строки эквивалентны, &gt; 0 – если s1 &lt; s2,  &lt; 0 — если s1 &gt; s2 Без учёта регистра
                    2) возвращает значение true, если с является буквой или цифрой, и false в других случаях
                    3) возвращает значение true, если с является буквой, и false в других случаях
                    4) возвращает значение true, если с является цифрой, и false в других случаях
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "84">
		            <quest>
		                84. Функция atof(s1):
                    1) преобразует строку s1 в тип double
                    2) преобразует строку s1 в тип int
                    3) преобразует строку s1 в тип long int
                    4) считывает символ с со стандартного потока ввода, возвращает символ в формате int
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "85">
		            <quest>
		                85. Функция atoi(s1):
                    1) преобразует строку s1 в тип double
                    2) преобразует строку s1 в тип int
                    3) преобразует строку s1 в тип long int
                    4) считывает символ с со стандартного потока ввода, возвращает символ в формате int
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "86">
		            <quest>
		                86. Функция atol(s1):
                    1) преобразует строку s1 в тип double
                    2) преобразует строку s1 в тип int
                    3) преобразует строку s1 в тип long int
                    4) считывает символ с со стандартного потока ввода, возвращает символ в формате int
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "87">
		            <quest>
		                87. Функция getchar(с):
                    1) преобразует строку s1 в тип double
                    2) преобразует строку s1 в тип int
                    3) преобразует строку s1 в тип long int
                    4) считывает символ с со стандартного потока ввода, возвращает символ в формате int
		            </quest>
		            <true>4</true>
		      </question>
		      <question id = "88">
		            <quest>
		                88. Функция strchr(s,c):
                    1) поиск первого вхождения символа с в строке s. В случае удачного поиска возвращает указатель на место первого вхождения символа с. Если символ не найден, то возвращается ноль
                    2) определяет длину начального сегмента строки s1, содержащего те символы, которые не входят в строку s2
                    3) возвращает длину начального сегмента строки s1, содержащего только те символы, которые входят в строку s2
                    4) Возвращает указатель  первого вхождения любого символа строки s2 в строке s1
		            </quest>
		            <true>1</true>
	      	</question>
		      <question id = "89">
		            <quest>
		                89. Функция strcspn(s1,s2):
                    1) поиск первого вхождения символа с в строке s. В случае удачного поиска возвращает указатель на место первого вхождения символа с. Если символ не найден, то возвращается ноль
                    2) определяет длину начального сегмента строки s1, содержащего те символы, которые не входят в строку s2
                    3) возвращает длину начального сегмента строки s1, содержащего только те символы, которые входят в строку s2
                    4) Возвращает указатель  первого вхождения любого символа строки s2 в строке s1
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "90">
		            <quest>
		                90. Функция strspn(s1,s2):
                    1) поиск первого вхождения символа с в строке s. В случае удачного поиска возвращает указатель на место первого вхождения символа с. Если символ не найден, то возвращается ноль
                    2) определяет длину начального сегмента строки s1, содержащего те символы, которые не входят в строку s2
                    3) возвращает длину начального сегмента строки s1, содержащего только те символы, которые входят в строку s2
                    4) Возвращает указатель  первого вхождения любого символа строки s2 в строке s1
		            </quest>
		            <true>3</true>
		      </question>
	</lines>
	<recursion>
		      <question id = "91">
		            <quest>
	                	91.Чему будет равно значение, вычисленное при выполнении вызова F(7)?
		                int F(int n)
		                {
  		                	if (n &gt; 2)
    		                	return F(n-1) + G(n-2);
  			                else return 1;
	                	}
	                	int G(int n)
		                {
  		                  if (n &gt; 2)
    		                  return G(n-1) + F(n-2);
  		                	else return 1;
		                }
                    1) 12
                    2) 13
                    3) 11
                    4) 10
		            </quest>
		            <true>2</true>
		      </question>
		      <question id = "92">
		            <quest>
	                 	92. Чему будет равно значение, вычисленное при выполнении вызова F(8)?
	                	int F(int n)
	                	{
  	                		if (n &gt; 2)
    		                	return F(n-1) + G(n-2);
  			                else return 1;
	                	}
		                int G(int n)
		                {
 			                   if (n &gt; 2)
    			                return G(n-1) + F(n-2);
  			                else return 1;
		                }
                    1) 21
                    2) 18
                    3) 24
                    4) 4
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "93">
		            <quest>
	                 	93. Чему будет равно значение, вычисленное при выполнении вызова F(6)?
		                int F(int n)
	                	{
 		                  	if (n &gt; 2)
    			                return F(n-1) + G(n-2);
  			                else return n;
		                }
		                int G(int n)
		                {
  			                if (n &gt; 2)
    			                return G(n-1) + F(n-2);
  			                else return n + 1;
		                }
                    1) 16
                    2) 14
                    3) 17
                    4) 46
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "94">
		            <quest>
		                94. Чему будет равно значение, вычисленное при выполнении вызова G(6)?
		                int F(int n)
		                {
  		                	if (n &gt; 2)
    			                return F(n-1) + G(n-2);
  			                else return n;
		                }
		                int G(int n)
		                {
  		                	if (n &gt; 2)
    			                return G(n-1) + F(n-2);
  			                else return n + 1;
		                }
                    1) 17
                    2) 14
                    3) 16
                    4) 18
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "95">
		            <quest>
		                95. Чему будет равно значение, вычисленное при выполнении вызова G(5)?
		                int F(int n)
                    {
  			                if (n &gt; 2)
    		                	return F(n-1)+G(n-1)+F(n-2);
  			                else return n;
		                }
 		                int G(int n)
                    {
  			                if (n &gt; 2)
   		                  	return G(n-1)+F(n-1)+G(n-2);
  			                else return n+1;
                		}
                    1) 14
                    2) 16
                    3) 36
                    4) 37
	            	</quest>
		            <true>4</true>
		      </question>
	      	<question id = "96">
		            <quest>
		                96. Чему будет равно значение, вычисленное при выполнении вызова F(5)?
	                	int F(int n) 
                    {
  			                if (n &gt; 2)
    			                return F(n-1)+G(n-1)+F(n-2);
  			                else return n;
	                	}
 		                int G(int n)
                    {
  	                		if (n &gt; 2)
    			                return G(n-1)+F(n-1)+G(n-2);
  			                else return n+1;
		                }
                    1) 33
                    2) 37
                    3) 10
                    4) 16
		            </quest>
	            	<true>2</true>
		      </question>
		      <question id = "97">
		            <quest>
		                97. Чему будет равно значение, вычисленное при выполнении вызова G(5)?
		                int F(int n)
                    {
		                  	if (n &gt; 2)
		                    	return F(n-1)+G(n-1)+F(n-2);
		                  	else return n;
		                }
	                	int G(int n)
                    {
		                  	if (n &gt; 2)
		                    	return G(n-1)+F(n-1)+G(n-2);
			                  else return 3-n;
		                }
                    1) 26
                    2) 14
                    3) 24
                    4) 12
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "98">
		            <quest>
		                98. Чему будет равно значение, вычисленное при выполнении вызова F(5)?
	                	int F(int n)
                    {
	                  		if (n &gt; 2)
		                     	return F(n-1)+G(n-1)+F(n-2);
	                  		else return n;
	                 	}
	                	int G(int n)
                    {
		                  	if (n &gt; 2)
			                    return G(n-1)+F(n-1)+G(n-2);
		                  	else return 3-n;
		                }
                    1) 24
                    2) 30
                    3) 25
                    4) 20
		            </quest>
		            <true>3</true>
		      </question>
	      	<question id = "99">
		            <quest>
	                	99. Чему будет равно значение, вычисленное при выполнении вызова F(6)?
	                	int F(int n) 
                    {
    		              	if (n &gt; 2)
     		                	return F(n-1) + G(n-2);
    		              	else
     		                	return 2;
	                	}
	                	int G(int n) 
                    {
    		              	if (n &gt; 2)
     		                	return G(n-1) + F(n-2);
    		              	else
     		                	return 2;
		                }
                    1) 16
                    2) 14
                    3) 12
                    4) 18
		            </quest>
		            <true>1</true>
		      </question>
	      	<question id = "100">
	            	<quest>
	                	100.Чему будет равно значение, вычисленное при выполнении вызова G(6)?
	                	int F(int n) 
                    {
    		              	if (n &gt; 2)
     			                return F(n-1) + G(n-2);
    		              	else
     		                	return 2;
		                }
		                int G(int n)
                    {
    			              if (n &gt; 2)
     			                return G(n-1) + F(n-2);
    		              	else
     			                return 2;
	                	}
                    1) 14
                    2) 16
                    3) 18
                    4) 20
	            	</quest>
		            <true>2</true>
		      </question>
	      	<question id = "101">
	            	<quest>
		                101.Чему будет равно значение, вычисленное при выполнении вызова F(5)?
		                int F(int n) 
                    {
    		              	if (n &gt; 1)
    			                return F(n-1) + G(n-1);
   			                else
     		                	return n;
	                	}
		                int G(int n) 
                    {
    			              if (n &gt; 1)
     			                return G(n-1) + F(n);
    		              	else
     		                	return n;
	                	}
                    1) 32
                    2) 34
                    3) 35
                    4) 36
		            </quest>
	            	<true>2</true>
		      </question>
	      	<question id = "102">
		            <quest>
		                102. Чему будет равно значение, вычисленное при выполнении вызова G(5)?
	                	int F(int n) 
                    {
    		              	if (n &gt; 1)
     			                return F(n-1) + G(n-1);
    		              	else
     		                	return n;
		                }
	                	int G(int n) 
                    {
    			              if (n &gt; 1)
     		                	return G(n-1) + F(n);
    		              	else
     		                	return n;
		                }
                    1) 55
                    2) 54
                    3) 53
                    4) 52
	            	</quest>
	            	<true>1</true>
	        </question>
	      	<question id = "103">
	            	<quest>
		                103. Чему будет равно значение, вычисленное при выполнении вызова G(6)?
		                int F(int n) 
                    {
    		              	if (n &gt; 2)
        	              	return F(n-1) + G(n-2);
    		              	else return n;
 		                }
 		                int G(int n) 
                    {
    		              	if (n &gt; 2)
        		              return G(n-1) + F(n-2);
    		              	else return 3-n;
 	                	}
                    1) 12
                    2) 14
                    3) 13
                    4) 16
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "104">
		            <quest>
		                104. Чему будет равно значение, вычисленное при выполнении вызова F(6)?
	                	int F(int n) 
                    {
		                  	if (n &gt; 2)
    			                return F(n-1) + G(n-2);
  		                	else return n;
 		                }
 	                	int G(int n) 
                    {
  		                 	if (n &gt; 2)
    		                	return G(n-1) + F(n-2);
  			                else return 3-n;
 		                }
                    1) 11
                    2) 12
                    3) 13
                    4) 14
		            </quest>
		            <true>1</true>
		      </question>
	      	<question id = "105">
		            <quest>
	                 	105. Чему будет равно значение, вычисленное при выполнении вызова F(6)?
	                	int F(int n)
	                	{
 	                  		if (n &gt; 2)
 			                    return F(n - 1) + G(n - 2);
 			                  else return n;
		                }
	                 	int G(int n)
	                	{
	                  		if (n &gt; 2)
 		                    	return G(n - 1) + F(n -2);
 		                  	else return n+1;
	                	}
                    1) 16
                    2) 46
                    3) 48
                    4) 17
	            	</quest>
		            <true>4</true>
		      </question>
	      	<question id = "106">
		            <quest>
		                106. Чему будет равно значение, вычисленное при выполнении вызова G(6)?
	                	int F(int n)
	                	{
 		              	    if (n &gt; 2)
 		                    	return F(n - 1) + G(n - 2);
 			                  else return n;
		                }
	                	int G(int n)
	                	{
 		                  	if (n &gt; 2)
 			                    return G(n - 1) + F(n -2);
 			                  else return n+1;
		                }
                    1) 14
                    2) 17
                    3) 16
                    4) 18
		            </quest>
		            <true>2</true>
		      </question>
	      	<question id = "107">
		            <quest>
	                	107. Чему будет равно значение, вычисленное при выполнении вызова F(7)?
		                int F(int n)
	                	{
 	                  		if (n &gt; 2)
 		                    	return F(n - 1) + G(n - 2);
 			                  else return n+1;
	                	}
	                	int G(int n)
	                	{
 		                   	if (n &gt; 2)
 			                    return G(n - 1) + F(n -2);
 			                  else return n;
	                	}
                    1) 28
                    2) 16
                    3) 26
                    4) 24
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "108">
		            <quest>
		                108. Чему будет равно значение, вычисленное при выполнении вызова G(7)?
	                	int F(int n)
	                	{
 		                  	if (n &gt; 2)
 		                    	return F(n - 1) + G(n - 2);
 		                  	else return n+1;
		                }
		                int G(int n)
	                	{
 		                  	if (n &gt; 2)
			                    return G(n - 1) + F(n -2);
 			                  else return n;
		                }
                    1) 16
                    2) 14
                    3) 27
                    4) 28
		            </quest>
		            <true>3</true>
		      </question>
		      <question id = "109">
		            <quest>
		                109. Чему будет равно значение, вычисленное при выполнении вызова F(9)?
		                int F(int n)
	                	{
    		              	if (n &gt; 2)
        		              return F(n-2) + F(n/2);
    		              	else
        	              	return n;
		                }
                    1) 10
                    2) 12
                    3) 14
                    4) 16
	            	</quest>
		            <true>1</true>
		      </question>
	      	<question id = "110">
		            <quest>
	                	110.Сколько символов «звёздочка» будет напечатано на экране при выполнении вызова F(11)?
	                	void F(int n);
	                	void G(int n);
                		void F(int n)
                    {
     		              	if (n &gt; 0)
          	          	  G(n - 1);
		                }
 		                void G(int n)
                    {
     		              	printf("*");
     		              	if (n &gt; 1)
                      		F(n - 2);
	                	}
                    1) 12
                    2) 4
                    3) 6
                    4) 8
	            	</quest>
		            <true>2</true>
		      </question>
	      	<question id = "111">
		            <quest>
		                111.Сколько символов «звёздочка» будет напечатано на экране при выполнении вызова F(11)?
		                void F(int n);
	                	void G(int n);
 		                void F(int n)
                    {
    		              	if (n &gt; 0)
        	              	G(n - 1);
		                }
 	                	void G(int n)
                    {
    		              	printf("*");
    		               	if (n &gt; 1)
        	               	F(n - 3);
	                	}
                    1) 2
                    2) 3
                    3) 4
                    4) 6
		            </quest>
		            <true>2</true>
		      </question>
	      	<question id = "112">
		            <quest>
	                	112. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(5)?
	                	int F(int n)
	                	{
                  			if (n &gt; 2)
        	              	return F(n-1) + F(n-2);
    			              else return 1;
	                	}
                    1) 5
                    2) 4
                    3) 6
                    4) 8
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "113">
		            <quest>
		                113. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(6)?
		                int F(int n)
		                {
                  			if (n &gt; 2)
        	              	return F(n-1) + F(n-2);
    			              else return 1;
		                }
                    1) 5
                    2) 6
                    3) 8
                    4) 4
	            	</quest>
		            <true>3</true>
		      </question>
		      <question id = "114">
	            	<quest>
		                114. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(5)?
	                 	int F(int n)
		                {
    	              		if (n &gt; 2)
        	               	return F(n-1) + F(n-2);
    			              else return n;
	                	}
                    1) 8
                    2) 6
                    3) 4
                    4) 2
		            </quest>
		            <true>1</true>
		      </question>
		      <question id = "115">
		            <quest>
	                	115. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(6)?
		                int F(int n)
	                	{
                   			if (n &gt; 2)
        	              	return F(n-1) + F(n-2);
    			              else return n;
		                }
                    1) 16
                    2) 15
                    3) 14
                    4) 13
	            	</quest>
		            <true>4</true>
		      </question>
		      <question id = "116">
		            <quest>
	                	116. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(5)?
	                	int F(int n)
		                {
                  			if (n &gt; 2)
        		              return F(n-1)+F(n-2)+F(n-3);
    		              	else return n;
		                }
                    1) 10
                    2) 11
                    3) 12
                    4) 14
	            	</quest>
	            	<true>2</true>
		      </question>
		      <question id = "117">
		            <quest>
	                	117. Чему будет равно значение, вычисленное алгоритмом при выполнении вызова F(6)?
	                	int F(int n)
	                 	{
                	  		if (n &gt; 2)
                      		return F(n-1)+F(n-2)+F(n-3);
    		              	else return n;
		                }
                    1) 20
                    2) 18
                    3) 22
                    4) 24
	            	</quest>
		            <true>1</true>
		      </question>
		      <question id = "118">
	            	<quest>
	                	118. Чему будет равно значение, вычисленное при выполнении вызова F(9)?
	                	int F(int n)
	                	{
    	              		if (n &gt; 3)
        	              	return F(n-2) + F(n/2);
    			              else
        	              	return n;
	                	}
                    1) 14
                    2) 16
                    3) 12
                    4) 18
	            	</quest>
		            <true>3</true>
	      	</question>
		      <question id = "119">
		            <quest>
		                119. Чему равна сумма всех чисел, напечатанных на экране при выполнении вызова F(1)?
		                void F(int n)
		                {
              			    cout &lt;&lt; n &lt;&lt; endl;
                			    if (n &gt; 5) 
                          {
        	                  	F(n + 1);
        		                  F(n + 3);
    			                }
		                }
                    1) 49
                    2) 48
                    3) 47
                    4) 46
	            	</quest>
		            <true>1</true>
	      	</question>
		      <question id = "120">
		            <quest>
	                	120.Чему равна сумма всех чисел, напечатанных на экране при выполнении вызова F(5)?
	                	void F(int n)
	                 	{
                   			cout &lt;&lt; n;
    		              	if (n &gt; 0)
    			              {
        		              	F(n - 1);
        		              	F(n - 3);
    		              	}
		                }
                    1) 10
                    2) 11
                    3) 12
                    4) 16
            		</quest>
		            <true>2</true>
		      </question>
	</recursion>
	<struct> 
		<question id = "121">
			<quest>
					Укажите правильный доступ к переменной структуры. 

			    1) b.var; 
			    2) b>var; 
			    3) b-var; 
			    4) b->var; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "122">
		    <quest>
					Укажите правильное обращение к полям структуры: struct coord{int x; int z;}data; : 

			    1) data.x; data.z; 
			    2) coord.x; coord.z; 
			    3) coord.x; data.z; 
			    4) data.y; 
			 </quest>
			<true>1</true> 
		</question>
		<question id = "123" >
		    <quest>
					Дано: float qwe[100]; float *p_qwe=qwe; Вопрос: на сколько увеличится p_qwe при выполнении оператора p_qwe ++ ; : 

			    1) на 4; 
			    2) на 2; 
			    3) на 1; 
			    4) на 0; 
			 </quest>
			<true>3</true> 
		</question>
		<question id = "124">
		    <quest>
					Дано: struct coord{int x; int z[];};Что означает следующая запись struct coord data[100];: 

			    1) объявляется массив, каждый элемент которого – структура типа coord; 
			    2) объявляется структура data, каждый элемент которой – массив;
			    3) объявляется массив coord, каждый элемент которого - структура типа data; 
			    4) ничего не объявляется; 
			 </quest>
			<true>1</true> 
		</question>
		<question id = "125" >
		    <quest>
					Укажите правильное определение структуры: 

			    1) это совокупность нескольких переменных различных типов, объединенных под одним именем; 
			    2) это совокупность нескольких переменных одного типа, объединенных под одним именем; 
			    3) это одна переменная которая может быть разных типов; 
			    4) это совокупность типов переменных; 
			 </quest>
			<true>1</true> 
		</question>
		<question id = "126" >
		    <quest>
					Как передать в функцию f указатель на структуру healt_record? 

			    1) обратиться к функции как к записи структуры: healt_record.f 
			    2) с помощью взятия адреса функции с передачей непосредственно структуры: &amp;f(healt_record) 
			    3) передать указатель на структуру: f(&amp;healt_record) 
			    4) передать непосредственно структуру (но только с поверхностным копированием): f (healt_record) 
			 </quest>
			<true>3</true> 
		</question>
		<question id = "127" >
		    <quest>
					Может ли функция входить в структуру? 
			    4) да 
			    2) да, но только типа void 
			    3) да, но только типа int 
			    4) нет 
			</quest>
			<true>4</true> 
		</question>
		<question id = "128" >
		    <quest>
					Какие данные объединяет структура? 

			    4) структура объединяет логически связанные данные только неотрицательных целых типов 
			    2) структура объединяет логически связанные данные только целых типов 
			    3) структура объединяет логически связанные данные только одинаковых типов 
			    4) структура объединяет логически связанные данные разных типов 
			</quest>
			<true>4</true> 
		</question>
		<question id = "129" >
		    <quest>
					Пусть описана структура struct Line {
       			int len;
       			char *str;
	   			}; и переменые struct Line s1, *s2;
	   			int n; char c; Укажите все корректные выражения языка Си среди перечисленных
				ниже: 

			    4) n = s1.len 
			    2) s1 == *s2 
			    3) s2 = *s1 
			    4) c = s1>str[2] 
			</quest>
			<true>1</true> 
		</question>
		<question id = "130" >
		    <quest>
					Какая структура данных обычно используется
				для передачи заданий драйверу операционной системы?

			    4) Стек. 
			    2) Очередь. 
			    3) И стек и очередь. 
			    4) Никакая. 
			</quest>
			<true>2</true> 
		</question>
		<question id = "131" >
		    <quest>
					Какая структура данных обычно используется
				при передаче параметров подпрограммам и функциям? 

			    1) Очередь. 
			    2) Стек. 
			    3) И стек и очередь. 
			    4) Никакая. 
			</quest>
			<true>2</true> 
		</question>
		<question id = "132" >
		    <quest>
					Что такоe структура? 

			    1) это объединение одного либо более объектов  
			    2) это объединение переменных 
			    3) это объединение массивов 
			    4) это объединение указателей 
			</quest>
			<true>1</true> 
		</question>
		<question id = "133" >
		    <quest>
					как выглядит описание стуктуры? 

			    1) struct(описание полей структуры) 
			    2) struct {имя структуры; описание полей структуры} 
			    3) struct имя_структуры {
   	 			описание полей структуры
				}; 
			    4) struct описание полей структуры</quest>
			<true>3</true> 
		</question>
		<question id = "134" >
		    <quest>
					какая из эти структур правильная? 

				4) struct date
				{
    			int day;}; 
			    2) struct date
				(
    			int day;); 
			    3) struct date
    			int day; 
			    4) struct int day; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "135" >
		    <quest>
					какая из этих структур правильна? 

			    1) struct node {
			    void* value;
	  			struct node next;
				}; 
				    2) struct node {
	 		    void* value;
	  			struct node *next;
				}; 
				3) struct node (
	    		void* value;
	    		struct node *next;
				); 
				    4) struct node 
	    		void* value;
	    		struct node *next;
			</quest>
			<true>2</true> 
		</question>
		<question id = "136" >
		    <quest>
					где правильно вызванна структура? 
					
			    1) struct Distance d1, d3; 
			    2) struct (Distance d1, d   3) ; 
			    3) struct {Distance d1, d3}; 
			    4) struct (Distance) d1, d3; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "137" >
		    <quest>
					как правильно вызвать переменную из структуры?
				struct home {
 			 	int rooms;
				};
				struct home home1;  

			    1) home1.rooms = 4;  
			    2) home1_rooms = 4;  
			    3) home1rooms = 4;  
			    4) home1 rooms = 4;  
			</quest>
			<true>1</true> 
		</question>
		<question id = "138" >
		    <quest>
					как правильно записывается ключевое слово для работы со структурой? 

			    1) structura 
			    2) struct 
			    3) struckt 
			    4) strukt 
			</quest>
			<true>2</true> 
		</question>
		<question id = "139" >
		    <quest>
					В каких скобках записывается содержимое структуры? 

			    1) квадратных 
			    2) круглых 
			    3) фигурных 
			    4) без скобок 
			</quest>
			<true>3</true> 
		</question>
		<question id = "140" >
		    <quest>
					Переменные каких типов могут быть использованны в структуре?

			    1) только int 
			    2) только double  
			    3) всех 
			    4) double и float 
			</quest>
			<true>3</true> 
		</question>
		<question id = "141" >
		    <quest>
					каким символом необходимо заканчивать обьявление структуры?

			    1) точкой 
			    2) пробелом 
			    3) точкой запятой 
			    4) двоеточием 
			</quest>
			<true>3</true> 
		</question>
		<question id = "142" >
		    <quest>
					сколько переменных может содержать структура? 

			    1) 2 
			    2) 5 
			    3) до 100 
			    4) не ограниченно 
			</quest>
			<true>4</true> 
		</question>
		<question id = "143" >
		    <quest>
					правильна ли такая запись? typedef struct name
				{
    			type atrib1;
   				 type atrib2;
				} newStructName structVar; 

			    1) да  
			    2) нет 
			    3) нет, необходимо заменить фигурные скобки на круглые 
			    4) нет, необходимо убрать typedef 
			</quest>
			<true>1</true> 
		</question>
		<question id = "144" >
		    <quest>
					что здесть неверно? typedef struct name
				{
    			type atrib1;
    			type atrib2;
				} newStructName structVar; 

			    1) typedef 
			    2) ничего  
			    3) скобки 
			    4) содержимое 
			</quest>
			<true>2</true> 
		</question>
		<question id = "145" >
		    <quest>
					может ли структура входить в функцию ?

			    1) да 
			    2) да, но только типа void 
			    3) да, но только типа int 
			    4) нет 
			</quest>
			<true>1</true> 
		</question>
		<question id = "146" >
		    <quest>
					что должно идти после слова struct в обьявлении структуры? 

			    1) название структуры 
			    2) переменная 
			    3) ничего 
			    4) еще одно слово struct 
			</quest>
			<true>1</true> 
		</question>
		<question id = "147" >
		    <quest>
					после слова struct в объявлении структуры должна идти точка запятая? 

			    1) да 
			    2) нет, нужна точка 
			    3) нет 
			    4) нет, нужно двоеточие 
			</quest>
			<true>3</true> 
		</question>
		<question id = "148" >
		    <quest>
					правильна ли описана структура? struct home {
 				 int rooms;
				};
				struct home home1; 

			    1) нет 
			    2) да 
			    3) нет, должны быть круглые скобки 
			    4) нет, должны быть квадратные скобки 
			</quest>
			<true>2</true> 
		</question>
		<question id = "149" >
		    <quest>
					что должно стоять после фигурных скобок в описании структуры? 
			    1) точка запятая 
			    2) точка 
			    3) ничего 
			    4) двоеточие 
			</quest>
			<true>1</true> 
		</question>
		<question id = "150" >
		    <quest>
					описание структуры начинается со слова: 

			    1) struct 
			    2) structura 
			    3) srukt 
			    4) str 
			</quest>
			<true>1</true> 
		</question>
	</struct>
	<file>
		<question id = "151" >
		    <quest>
					При построении целочисленной матрицы А(15х15) из какого файла берется функция clrscr( )?
					 
			    1) всегда из заголовочного файла conio.h 
			    2) зависит от компилятора – такой функции может не быть вообще 
			    3) всегда из заголовочного файла stdio.h 
			    4) создается в данной программе 
			</quest>
			<true>2</true> 
		</question>
		<question id = "152" >
		    <quest>
					Является ли тип данных FILE частью языка Си? 

			    1) Да, этот тип входит в язык и предназначен для
				работы с файлами. 
			    2) Нет, этот тип не входит в язык; он описан в
				стандартной библиотеке ANSI. 
			    3) нет, этот тип не используется в языке Си 
			    4) нет,этот тип описан в библиотеке Math 
			</quest>
			<true>2</true> 
		</question>
		<question id = "153" >
		    <quest>
					Что делает следующий фрагмент программы на Си?
				FILE *f;
   				 . . .
    			f = fopen(&quot;tmp.dat&quot;, &quot;wb+&quot;); 
				
			    1) Открывает файл «tmp.dat» в текущей директории
				как бинарный для чтения и записи, при этом старое содержимое
				файла теряется. 
			    2) Открывает файл «tmp.dat» в текущей директории
				как бинарный для записи, при этом старое содержимое
				файла теряется. 
			    3) Открывает файл «tmp.dat» в текущей директории
				как бинарный для чтения и записи, при этом старое содержимое
				файла сохраняется. 
			    4) Открывает файл «wb+.dat» в текущей директории
				как бинарный для чтения и записи, при этом старое содержимое
				файла сохраняется. 
		   </quest>
			<true>1</true> 
		</question>
		<question id = "154" >
		    <quest>
					В операционной системе MS Windows
				файл «tmp.dat» создается в результате выполнения следующего
				фрагмента программы:
				int a[4]; int i;
					FILE *f = fopen(&quot;tmp.dat&quot;, &quot;wb&quot;);
					a[0] = 1; a[1] = 2; a[2] = 10; a[3] = 20;
				for (i = 0; i &lt; 4; ++i) {
				fprintf(f, &quot;%d\n&quot;, a[i]);
				}
				fclose(f);
				Чему равен размер файла «tmp.dat» в байтах? 

			    1) Размер файла равен 13 байтам. 
			    2) Размер файла равен 10 байтам. 
			    3) Размер файла равен 9 байтам. 
			    4) Размер файла равен 14 байтам. 
			</quest>
			<true>2</true> 
		</question>
		<question id = "155" >
		    <quest>
					Пусть в ОС Windows XP требуется открыть файл
				c:\Windows\system32\drivers\hosts
				как текстовый для чтения и записи. Для этого
				используется следующий фрагмент программы:
				FILE *f;
				. . .
					f = fopen(
				&quot;c:\Windows\system32\drivers\hosts&quot;,
				&quot;rt+&quot;
				);
				Содержит ли он ошибку? 

				1) Да, фрагмент кода содержит ошибку. 
				2) Нет, фрагмент кода корректный. 
				3) Нет, фрагмент кода некорректный. 
				4) Да, фрагмент кода не содержит ошибку. 
			</quest>
			<true>1</true> 
		</question>
		<question id = "156" >
		    <quest>
					В операционной системе MS Windows
				файл «tmp.dat» создается в результате выполнения следующего
				фрагмента программы:
				int a[3]; int i;
				FILE *f = fopen(&quot;tmp.dat&quot;, &quot;wt&quot;);
				a[0] = 1; a[1] = 10; a[2] = 100;
				for (i = 0; i &lt; 3; ++i) {
				fprintf(f, &quot;%d\n&quot;, a[i]);
				}
				fclose(f);
				Чему равен размер файла «tmp.dat» в байтах? 

			    1) Размер файла равен 11 байтам. 
			    2) Размер файла равен 8 байтам. 
			    3) Размер файла равен 12 байтам. 
			    4) Размер файла равен 9 байтам. 
			</quest>
			<true>3</true> 
		</question>
		<question id = "157" >
		    <quest>
					Какая из процедур использует
				полное имя файла? 

			    1) AssignFile 
			    2) Reset 
			    3) Rewrite 
			    4) Append 
			</quest>
			<true>1</true> 
		</question>
		<question id = "158" >
		    <quest>
					Какая из процедур
				используется для открытия
				файла для чтения из него? 

			    1) AssignFile 
			    2) Reset 
			    3) Rewrite 
			    4) Append 
			</quest>
			<true>2</true> 
		</question>
		<question id = "159" >
		    <quest>
					Какая из процедур используется
				только для текстовых файлов?

			    1) AssignFile 
			    2) Reset 
			    3) Rewrite 
			    4) Append 
			</quest>
			<true>4</true> 
		</question>
		<question id = "160" >	
		    <quest>
					Какая из процедур стирает
				старый файл? 

			    1) AssignFile 
			    2) Reset 
			    3) Rewrite 
			    4) Append 
			</quest>
			<true>3</true> 
		</question>
		<question id = "161" >
					<quest>
					Какая из команд описывает
				файловую переменную
				типизированного файла? 

			    1) F: File; 
			    2) F: TextFile; 
			    3) F: File of real; 
			    4) F: FileText; 
			</quest>
			<true>3</true> 
		</question>
		<question id = "162" >	
		    <quest>
					Какая из команд описывает
				файловую переменную не
				типизированного файла? 
			    1) F: File; 
			    2) F: TextFile; 
			    3) F: File of real; 
			    4) F: FileText; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "163" >	
		    <quest>
					Какая из команд описывает
				файловую переменную
				текстового файла? 

			    1) F: File; 
			    2) F: TextFile; 
			    3) F: File of real; 
			    4) F: FileText; 
			</quest>
			<true>2</true> 
		</question>
		<question id = "164" >
		    <quest>
					Какая из команд описывает
				переменную, которая не
				является файловой? 
			    1) F: File; 
			    2) F: TextFile; 
			    3) F: File of real; 
			    4) F: FileText; 
			</quest>
			<true>4</true> 
		</question>
		<question id = "165" >
		    <quest>
					что делает эта запись? r или rb  

				1) открывает для записи (создаёт файл в случае
				его отсутствия). Удаляет содержимое и
				перезаписывает файл;
			    2) открывает для чтения 
			    3) открывает для чтения и записи 
			    4) открывает для чтения и записи (добавляет в
				случае существования файла)  
		   </quest>
			<true>2</true> 
		</question>
		<question id = "166" >
		    <quest>
					что делает эта запись? w или wb 

			    1) открывает для чтения 
			    2) открывает для добавления (создаёт файл в
				случае его отсутствия)  
			    3) открывает для записи (создаёт файл в случае
				его отсутствия). Удаляет содержимое и
				перезаписывает файл.
			    4) открывает для чтения и записи. Удаляет
		содержимое и перезаписывает файл. 
		   </quest>
			<true>3</true> 
		</question>
		<question id = "167" >
		    <quest>
					что делает эта запись? a или ab 

			    1) открывает для чтения  
			    2) открывает для записи (создаёт файл в случае
				его отсутствия). Удаляет содержимое и
				перезаписывает файл. 
			    3) открывает для чтения и записи  
			    4) открывает для добавления (создаёт файл в
				случае его отсутствия)  
		   </quest>
			<true>4</true> 
		</question>
		<question id = "168" >
		    <quest>
					что делает эта запись?r+ или rb+ или r+b 

			    1) открывает для чтения и записи 
			    2) открывает для добавления 
			    3) открывает для чтения 
			    4) открывает для чтения и записи (добавляет в
				случае существования файла) 
		   </quest>
			<true>1</true> 
		</question>
		<question id = "169" >
		    <quest>
					что делает эта запись?w+ или wb+ или w+b 

			    1) открывает для чтения и записи 
			    2) открывает для чтения и записи. Удаляет
				содержимое и перезаписывает файл.  
			    3) открывает для чтения и записи (добавляет в
				случае существования файла) 
			    4) открывает для чтения 
			</quest>
			<true>2</true> 
		</question>
		<question id = "170" >
		    <quest>
					что делает эта запись?a+ или ab+ или a+b 

			    1) открывает для чтения и записи (добавляет в
				случае существования файла) 
			    2) открывает для чтения и записи. Удаляет
				содержимое и перезаписывает файл.  
			    3) открывает для добавления (создаёт файл в
				случае его отсутствия)  
			    4) открывает для чтения 
			</quest>
			<true>1</true> 
		</question>
		<question id = "171" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для чтения 

			    1) w wb 
			    2) r rb  
			    3) a ab  
			    4) r+ rb+ r+b 
			   </quest>
			<true>2</true> 
		</question>
		<question id = "172" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для записи (создаёт файл в случае
				его отсутствия). Удаляет содержимое и
				перезаписывает файл. 

			    1) w wb 
			    2) r rb 
			    3) a ab  
			    4) w+ wb+ w+b  
			</quest>
			<true>1</true> 
		</question>
		<question id = "173" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для добавления (создаёт файл в
				случае его отсутствия)  
				
			    1) w wb 
			    2) a+ ab+ a+b 
			    3) w+ wb+ w+b 
			    4) a ab  
			</quest>
			<true>4</true> 
		</question>
		<question id = "174" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для чтения и записи  

			    1) r+ rb+ r+b 
			    2) a ab  
			    3) r rb 
			    4) a+ ab+ a+b 
			</quest>
			<true>1</true> 
		</question>
		<question id = "175" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для чтения и записи. Удаляет
				содержимое и перезаписывает файл.  

			    1) r+ rb+ r+b  
			    2) w+ wb+ w+b  
			    3) w wb 
			    4) r rb  
			</quest>
			<true>2</true> 
		</question>
		<question id = "176" >
		    <quest>
					какой режим проводит такое действие с файлом:открывает для чтения и записи (добавляет в
				случае существования файла)  

			    1) w+ wb+ w+b 
			    2) r+ rb+ r+b  
			    3) a+ ab+ a+b 
			    4) w wb 
			</quest>
			<true>3</true> 
		</question>
		<question id = "177" >
		    <quest>
					Функция закрытия файла имеет следующий прототип: 

			    1) int fclose (FILE *stream); 
			    2) int ferror(FILE *stream);  
			    3) void clearerr (FILE* stream); 
			    4) int feof (FILE *stream);  
			</quest>
			<true>1</true> 
		</question>
		<question id = "178" >
		    <quest>
					функция проверки достижения конца файла 

			    1) int fseek(FILE *stream, long offset, int origin); 
			    2) int feof (FILE *stream); 
			    3) void clearerr (FILE* stream); 
			    4) int fsetpos (FILE*stream, const fpos_t* pposition); 
			</quest>
			<true>2</true> 
		</question>
		<question id = "179" >
		    <quest>
					функция которая записывает в pposition текущую позицию курсора в файле 

			    1) void clearerr (FILE* stream);  
			    2) int ferror(FILE *stream);  
			    3) int feof (FILE *stream); 
			    4) int fgetpos(FILE* stream, fpos_t* pposition); 
			</quest>
			<true>4</true> 
		</question>
		<question id = "180" >
		    <quest>
					функция которая устанавливает курсор в файле в позицию из pposition 

			    1) int fsetpos (FILE*stream, const fpos_t* pposition); 	
			    2) void clearerr (FILE* stream); 
			    3) int feof (FILE *stream); 
			    4) int fseek(FILE *stream, long offset, int origin);  
			</quest>
			<true>1</true> 
		</question>
	</file>
	<addresses_and_pointers>
		<question id = "181" >
		    <quest>
					Как передать в функцию f указатель на структуру healt_record? 

			    1) обратиться к функции как к записи структуры: healt_record.f 
			    2) с помощью взятия адреса функции с передачей непосредственно структуры: &amp;f(healt_record) 
			    3) передать указатель на структуру: f(&amp;healt_record) 
			    4) передать непосредственно структуру (но только с поверхностным копированием): f (healt_record) 
			</quest>
			<true>3</true> 
		</question>
		<question id = "182" >
		    <quest>
					Как получить адрес переменной? 

			    1) использовать операцию # 
			    2) использовать операцию ? 
			    3) использовать операцию &amp; 
			    4) использовать операцию * 
			</quest>
			<true>3</true> 
		</question>
		<question id = "183" >
		    <quest>
					Что является указателем на хранящуюся в памяти строковую константу?

			    1) вся фраза в кавычках является указателем на место в памяти 
			    2) первая литера строковой константы является указателем на место в памяти 
			    3) последняя литера строковой константы является указателем на место в памяти 
			    4) первая четная литера строковой константы является указателем на место в памяти 
			</quest>
			<true>1</true> 
		</question>
		<question id = "184" >
		    <quest>
					Как получить значение, ссылаясь на указатель?

			    1) использовать операцию ? 
			    2) использовать операцию # 
			    3) использовать операцию * 
			    4) использовать операцию &amp; 
			</quest>
			<true>3</true> 
		</question>
		<question id = "185" >
		    <quest>
					Что означает описание «char *a[10]«?

			    1) a — массив из 10 элементов
				типа указатель на char. 
			    2) a — указатель на массив из 10 элементов
				типа int. 
			    3) a — указатель на массив из 10 элементов
				типа double. 
			    4) a — указатель на массив из 10 элементов
				типа float. 
		   </quest>
			<true>1</true> 
		</question>
		<question id = "186" >
		    <quest>
					Дано: float qwe[100]; float *p_qwe=qwe; Вопрос: на сколько увеличится p_qwe при выполнении оператора p_qwe ++ ; : 
					
			    1) на 4 
			    2) на 2 
			    3) на 1 
			    4) на 0 
			</quest>
			<true>3</true> 
		</question>
		<question id = "187" >
		    <quest>
					Дано: int *p_fcp =fcp , Вопрос: что обозначают fcp и *p_fcp: 

			    1) обозначают значение переменной fcp; 
			    2) обозначают адрес переменной fcp в памяти; 
			    3) обозначают значение переменной p_fcp; 
			    4) обозначают адрес переменной p_fcp; 
			</quest>
			<true>2</true> 
		</question>
		<question id = "188" >
		    <quest>
					Дано: float arr[100]; float *p_ = arr[3], Вопрос: на какой элемент массива arrбудет указывать p_ при выполнении оператора p_ += 5; : 

			    1) на 9; 
			    2) на 5; 
			    3) на 8; 
			    4) на 7; 
			</quest>
			<true>3</true> 
		</question>
		<question id = "189" >
		    <quest>
					Укажите пример объявления указателя: 

			    1) char *ch; 
			    2) char ch; 
			    3) char _ch; 
			    4) char #ch; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "190" >
		    <quest>
					что правильно для этого примера: 
				int *a, *b;
				double *d;
				void *v; 

			    1) a = b; 
			    2) b = v; 
			    3) d = a; 
			    4) v = b; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "191" >
		    <quest>
					что неправильно для этого примера: 
				int *a, *b;
				double *d;
				void *v; 

			    1) a = b; 
			    2) b = v; 
			    3) v = a; 
			    4) v = d 
			</quest>
			<true>2</true> 
		</question>
		<question id = "192" >
		    <quest>
					каких типов может быть указатель? 
					
			    1) только int  
			    2) только float 
			    3) int и double 
			    4) всеми 
			</quest>
			<true>4</true> 
		</question>
		<question id = "193" >
		    <quest>
					В какой из следующих записей используется операция разименования? 

			    1) *a; 
			    2) address(a); 
			    3) a ; 
			    4) &amp;a; 
			</quest>
			<true>1</true> 
		</question>
		<question id = "194" > 
		    <quest>
					В какой из следующих записей используется операция взятия адреса? 

			    1) *a; 
			    2) &amp;a; 
			    3) a ; 
			    4) address(a); 
			</quest>
			<true>2</true> 
		</question>
		<question id = "195" >
		    <quest>
					Что означает описание «double (*a)[10]«? 

			    1) a — указатель на массив из 10 элементов
				типа double. 
			    2) a — массив из 10 элементов
				типа указатель на int. 
			    3) a — массив из 10 элементов
				типа указатель на char. 
			    4) a — массив из 10 элементов
				типа указатель на double. 
		   </quest>
			<true>1</true> 
		</question>
		<question id = "196" >
		    <quest>
					Что означает описание «char *a[10]«? 

			    1) a — массив из 10 элементов
				типа указатель на char. 
			    2) a — указатель на массив из 10 элементов
				типа char. 
			    3) a — указатель на массив из 10 элементов
				типа int. 
			    4) a — указатель на массив из 10 элементов
				типа float. 
		   </quest>
			<true>1</true> 
		</question>
		<question id = "197" >
		    <quest>
					какую библиотеку нужно использовать чтобы работать с указателями? 

			    1) math 
			    2) stdlib 
			    3) stdio 
			    4) никакую 
			</quest>
			<true>4</true> 
		</question>
		<question id = "198" 
		>    <quest>
					операция разименования это символ: 

			    1) : 
			    2) ? 
			    3) * 
			    4) &amp; 
			</quest>
			<true>3</true> 
		</question>
		<question id = "199" >
		    <quest>
					операция взятия адреса это символ: 

			    1) &amp; 
			    2) : 
			    3) * 
			    4) ? 
			</quest>
			<true>1</true> 
		</question>
		<question id = "200" >
		    <quest>
					может ли указатель быть типа int? 

			    1) да 
			    2) нет, только float 
			    3) нет, только char 
			    4) нет, только double 
			</quest>
			<true>1</true> 
		</question>
		<question id = "201" >
			    <quest>
					может ли указатель быть типа float? 

			    1) да 
			    2) нет, только int 
			    3) нет, только char 
			    4) нет, только double 
			</quest>
			<true>1</true> 
		</question>
		<question id = "202" >
			    <quest>
					может ли указатель быть типа char? 

			    1) да 
			    2) нет, только float 
			    3) нет, только int 
			    4) нет, только double 
			</quest>
			<true>1</true> 
		</question>
		<question id = "203" >
			    <quest>
					может ли указатель быть типа double? 

			    1) да 
			    2) нет, только float 
			    3) нет, только char 
			    4) нет, только int 
			</quest>
			<true>1</true> 
		</question>
		<question id = "204" >
		    <quest>
					переменные каких типов можно вызвать по адресу? 

			    1) всех 
			    2) только int 
			    3) только char 
			    4) только float 
			</quest>
			<true>1</true> 
		</question>
		<question id = "205" >
		    <quest>
					можно ли вызвать переменную типа int по адресу? 

			    1) да 
			    2) нет, только float 
			    3) нет, только char 
			    4) нет, только double 
			</quest>
			<true>1</true> 
		</question>
		<question id = "206" >
			    <quest>
					можно ли вызвать переменную типа float по адресу? 

			    1) да 
			    2) нет, только double 
			    3) нет, только char 
			    4) нет, только int 
			</quest>
			<true>1</true> 
		</question>
		<question id = "207" >
			    <quest>
					можно ли вызвать переменную типа char по адресу? 

			    1) да 
			    2) нет, только double 
			    3) нет, только float 
			    4) нет, только int
			</quest>
			<true>1</true> 
		</question>
		<question id = "208" >
			    <quest>
					можно ли вызвать переменную типа double по адресу? 

			    1) да 
			    2) нет, только char 
			    3) нет, только float 
			    4) нет, только int 
			</quest>
			<true>1</true> 
		</question>
		<question id = "209" >
		    <quest>
					указатель это 

			    1) переменная, содержащая объект. 
			    2) переменная, содержащая адрес объекта. 
			    3) адрес, содержащая объект. 
			    4) переменная. 
				</quest>
			<true>2</true> 
		</question>
		<question id = "210" >
		    <quest>
					тип указателя это 

			    1) это тип переменной 
			    2) это тип адреса  
			    3) это адрес которой он содержит 
			    4) это тип переменной, адрес которой он содержит 
			</quest>
			<true>4</true> 
		</question>
	</addresses_and_pointers>	


	<dynamic_memory>
		<question id = "211" >
		    <quest>
					Динамическая процедура,
				которая отводит место в
				определенное количество байт,
				присваивая адрес его начала
				указателю Р 

			    1) New(var P: Pointer); 
			    2) Dispose(var P: Pointer); 
			    3) GetMem(var P: Pointer; Size: Word); 
			    4) FreeMem(var P: Pointer; Size: Word); 
			</quest>
			<true>3</true> 
		</question>
		<question id = "212" >
		    <quest>
					Динамическая процедура,
				которая уничтожает связь
				между ссылкой Р и значением,
				на которое она ссылалась 

			    1) New(var P: Pointer); 
			    2) Dispose(var P: Pointer); 
			    3) GetMem(var P: Pointer; Size: Word); 
			    4) FreeMem(var P: Pointer; Size: Word); 
			</quest>
			<true>2</true> 
		</question>
		<question id = "213" >	
		    <quest>
					Динамическая процедура,
				которая отводит место для
				хранения динамической
				переменной P^ присваивает её
				адрес ссылке Р 

			    1) New(var P: Pointer); 
			    2) Dispose(var P: Pointer); 
			    3) GetMem(var P: Pointer; Size: Word); 
			    4) FreeMem(var P: Pointer; Size: Word); 
			</quest>
			<true>1</true> 
		</question>
		<question id = "214" >	
		    <quest>
					Упорядоченная динамическая
				структура, каждый элемент
				которой содержит ссылку,
				связывающую его со
				следующим элементом,
				называется 

			    1) очередью 
			    2) стеком 
			    3) списком 
			    4) файлом 
			</quest>
			<true>3</true> 
		</question>
		<question id = "215" >
		    <quest>
					Динамическая структура,
				которая имеет одну точку
				доступа к его элементам
				(«голова»), называется 
				
			    1) очередью 
			    2) стеком 
			    3) списком 
			    4) файлом 
			</quest>
			<true>2</true> 
		</question>
		<question id = "216" >
		    <quest>
					Динамическая структура,
				которая имеет две основные
				операции: добавление в «хвост»
				и извлечение из «головы»
				является 

			    1) очередью 
			    2) стеком 
			    3) списком 
			    4) файлом 
			</quest>
			<true>1</true> 
		</question>
		<question id = "217" >
		    <quest>
					какая функция выделяет память? 

			    1) malloc 
			    2) realloc 
			    3) free  
			    4) calloc 
			</quest>
			<true>1</true> 
		</question>
		<question id = "218" >
		    <quest>
					какая функция выполняет чистое выделение памяти?

			    1) malloc 
			    2) realloc 
			    3) free  
			    4) calloc 
			</quest>
			<true>4</true> 
		</question>
		<question id = "219" >
		    <quest>
					какая функция выполняет перераспределение памяти? 

			    1) malloc 
			    2) realloc 
			    3) free  
			    4) calloc 
			</quest>
			<true>2</true> 
		</question>
		<question id = "220" >
		    <quest>
					какая функция выполняет освобождение памяти?

			    1) malloc 
			    2) realloc 
			    3) free  
			    4) calloc 
			</quest>
			<true>3</true> 
		</question>
		<question id = "221" >
		    <quest>
					Для использования функций динамического распределения памяти необходимо подключение библиотеки:
					 
			    1) malloc.h 
			    2) math.h 
			    3) stdio.h 
			    4) stdlib.h 
			</quest>
			<true>1</true> 
		</question>
		<question id = "222" >
		    <quest>
					Куча – это 

			    1) объекты памяти 
			    2) страница памяти 
			    3) динамическая область памяти 
			    4) указатель блока памяти
			   </quest>
			<true>3</true> 
		</question>
		<question id = "223" >
		    <quest>
					Куча – это 

			    1) блок памяти 
			    2) указатель строки 
			    3) указатель функции 
			    4) страница памяти 
			</quest>
			<true>1</true> 
		</question> 
		<question id = "224" >
		    <quest>
					Куча – это 

			    1) указатель функции 
			    2) мелкие фрагменты памяти 
			    3) указатель строки 
			    4) объекты памяти
			</quest>
			<true>2</true> 
		</question>
		<question id = "225" >
		    <quest>
					Функция для управления памятью кучи: 

			    1) HeapDestroy() 
			    2) HeapAlloc() 
			    3) HeapSize() 
			    4) MapViewOfFile() 
			</quest>
			<true>2</true> 
		</question>
		<question id = "226" >
		    <quest>
					Функция для управления памятью кучи: 

			    1) HeapReAlloc() 
			    2) HeapSize() 
			    3) HeapDestroy() 
			    4) HeapCreate() 
			</quest>
			<true>1</true> 
		</question>
		<question id = "227" >
		    <quest>
					Функция для управления памятью кучи: 

			    1) HeapFree() 
			    2) HeapDestroy() 
			    3) HeapCreate() 
			    4) HeapFree() 
			</quest>
			<true>4</true> 
		</question>
		<question id = "228" > 
		    <quest>
					Прототип функции LoadLibraryEx, для загрузки динамически подключаемых библиотек:  

			    1) LPCTSTR  
			    2) HINSTANCE  
			    3) DWORD_В  
			    4) LPVOID  
			</quest>
			<true>1</true> 
		</question>
		<question id = "229" > 
		    <quest>
					Задачи динамической локальной памяти потока: 

			    1) поместить библиотеку в каталог 
			    2) хранить указатели на захваченную память 
			    3) поместить  файл импорта этой библиотеки в каталог 
			    4) ввести имя используемой библиотеки импорта 
			</quest>
			<true>2</true> 
		</question>
		<question id = "230" >
		    <quest>
					Статическая локальная память: 

			    1) оповещает параллельные потоки 
			    2) устанавливает соединения между потоками данных 
			    3) определяет локальные переменные 
			    4) обслуживает очередь пакетов 
			</quest>
			<true>3</true> 
		</question>
		<question id = "231" >
		    <quest>
					Функция для работы локальной памятью потока: 

			    1) LpBuffer 
			    2) TlsAlloc 
			    3) NumberOfBytes 
			    4) ReadFile 
			<true>2</true> 
			   </quest>
		</question>
		<question id = "232" >
		    <quest>
					Функция для работы локальной памятью потока: 

			    1) TlsGetValue  
			    2) CompletionKey 
			    3) NumberOfBytes 
			    4) LpBuffer 
			</quest>
			<true>1</true> 
		</question>
		<question id = "233" >
		    <quest>
					Динамические подключаемые библиотеки предназначены 

			    1) для разработки функционально-замкнутых библиотек функций 
			    2) для открытия файла, который будет отображаться в динамической памяти 
			    3) для загрузки в адресное пространство процесса 
			    4) для сохранения файла и каталога 
			</quest>
			<true>1</true> 
		</question>
		<question id = "234" >
		    <quest>
					Функция для работы локальной памятью потока:

			    1) TlsSetValue 
			    2) CompletionKey 
			    3) NumberOfBytes 
			    4) lpAttributes 
			</quest>
			<true>1</true> 
		</question>
		<question id = "235" >
		    <quest>
					 Динамические подключаемые библиотеки предназначены 

			    1) для завершения нового потока в процессе 
			    2) для сохранения файла и каталога 
			    3) для перехода в адресную строку 
			    4) для снижения затрат на разработку ПО 
			</quest>
			<true>4</true> 
		</question>
		<question id = "236" >
		    <quest>
					Динамические подключаемые библиотеки предназначены 

			    1) для завершения нового потока в процессе 
			    2) для открытия файла, который будет отображаться в динамической памяти   
			    3) для уменьшения физической памяти 
			    4) для перехода в адресную строку 
			</quest>
			<true>3</true> 
		</question>
		<question id = "237" >
		    <quest>
					Задачи динамической локальной памяти потока: 

			    1) узнать какой поток ее вызывает 
			    2) поместить  файл импорта этой библиотеки в каталог 
			    3) ввести имя используемой библиотеки импорта 
			    4) описать импортируемые из DLL имена в приложении
			   </quest>
			<true>1</true> 
		</question>
		<question id = "238" >
		    <quest>
					Задачи динамической локальной памяти потока: 

			    1) создать DLL 
			    2) поместить библиотеку в каталог 
			    3) ввести имя используемой библиотеки импорта 
			    4) сопоставить каждому потоку свой указатель 
			</quest>
			<true>4</true> 
		</question>
		<question id = "239" >
		    <quest>
					Распределение локальной памяти потока в DLL:

			    1) dwPrewTlsIndex = dwNextTlsIndex 
			    2) case DLL_PROCESS_ATTACH 
			    3) return 0; 
			    4) returnGetLastError(); 
			</quest>
			<true>2</true> 
		</question>
		<question id = "240" >
		    <quest>
					Статическая локальная память:

			    1) использует спецификатор памяти  declspec(thread) 
			    2) устанавливает соединения между потоками данных 
			    3) принимает записи 
			    4) обслуживает очередь пакетов  
			</quest>
			<true>1</true> 
		</question>
	</dynamic_memory>
</testing>